{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "register",
        "summary": "Register a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "login",
        "summary": "Sign a user token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInfoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User details and token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/user": {
      "get": {
        "operationId": "getUser",
        "summary": "Get the request user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the request user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/boards": {
      "post": {
        "operationId": "createBoard",
        "summary": "Creates and returns a new board",
        "parameters": [
          {
            "name": "title",
            "required": true,
            "in": "path",
            "schema": {}
          }
        ],
        "responses": {
          "201": {
            "description": "New Board"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "getBoards",
        "summary": "Returns all boards tied to a specific user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of Boards"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/boards/{id}": {
      "get": {
        "operationId": "getBoard",
        "summary": "Returns a board by specific ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/boards/{id}/states": {
      "get": {
        "operationId": "getStates",
        "summary": "Returns all states tied to a specific board",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of States"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/states/{id}": {
      "get": {
        "operationId": "getCard",
        "summary": "Returns a state by specific ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "State details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateDto"
                }
              }
            }
          }
        },
        "tags": [
          "states"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "create",
        "summary": "Creates a new state in the board given a board id and state name",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns newly created state",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateDto"
                }
              }
            }
          }
        },
        "tags": [
          "states"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/states/{id}/cards": {
      "get": {
        "operationId": "getCards",
        "summary": "Returns all cards tied to a specific state",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDto"
                }
              }
            }
          }
        },
        "tags": [
          "states"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/cards/{id}": {
      "get": {
        "operationId": "getCard",
        "summary": "Returns a card by specific ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDto"
                }
              }
            }
          }
        },
        "tags": [
          "cards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Bonfire Backend API",
    "description": "Project for CSCC01",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "password"
        ]
      },
      "TokenDto": {
        "type": "object",
        "properties": {
          "expiresIn": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "expiresIn",
          "accessToken"
        ]
      },
      "LoginResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "token": {
            "$ref": "#/components/schemas/TokenDto"
          }
        },
        "required": [
          "id",
          "email",
          "first_name",
          "last_name",
          "token"
        ]
      },
      "LoginInfoDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "email"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "first_name",
          "last_name"
        ]
      },
      "BoardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "created_at",
          "updated_at"
        ]
      },
      "StateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "order",
          "created_at",
          "updated_at"
        ]
      },
      "CreateStateDto": {
        "type": "object",
        "properties": {
          "board_id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "board_id",
          "title"
        ]
      },
      "CardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "submit_url": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "due_date": {
            "format": "date-time",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "desc",
          "submit_url",
          "order",
          "due_date",
          "created_at",
          "updated_at"
        ]
      }
    }
  }
}