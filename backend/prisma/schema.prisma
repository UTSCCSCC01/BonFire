generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
  engineType    = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String              @unique
  password           String
  first_name         String
  last_name          String
  created_at         DateTime            @default(now())
  updated_at         DateTime            @updatedAt
  role               Role
  boards             Board[]
  student_classrooms StudentClassrooms[]
  classrooms         Classroom[]
  cards              Card[]
}

enum Role {
  Student
  Facilitator
}

model StudentClassrooms {
  classroom    Classroom @relation(fields: [classroom_id], references: [id])
  classroom_id Int
  student      User      @relation(fields: [student_id], references: [id])
  student_id   Int
  created_at   DateTime  @default(now())

  @@id([classroom_id, student_id])
}

model Classroom {
  id         Int                 @id @default(autoincrement())
  token      String              @unique
  name       String
  created_at DateTime            @default(now())
  updated_at DateTime            @updatedAt
  creator    User                @relation(fields: [creator_id], references: [id])
  creator_id Int
  students   StudentClassrooms[]
}

model Board {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  states     State[]

  @@index([user_id], map: "Board_user_id_fkey")
}

model State {
  id         Int      @id @default(autoincrement())
  board_id   Int
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  order      Int
  board      Board    @relation(fields: [board_id], references: [id])
  cards      Card[]

  @@index([board_id])
}

model Card {
  id         Int       @id @default(autoincrement())
  title      String
  desc       String?
  submit_url String?
  creator_id Int
  state_id   Int
  order      Int
  due_date   DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  creator    User      @relation(fields: [creator_id], references: [id])
  state      State     @relation(fields: [state_id], references: [id])

  @@index([creator_id])
  @@index([state_id])
}
